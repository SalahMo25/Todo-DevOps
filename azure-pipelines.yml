# Python Django TODO Project
trigger:
  branches:
    include:
        - main

pool:
    name: my-agent

variables:
  PYTHON_VERSION: '3.9'
  dockerHubNamespace: 'salahmo25'
  dockerRegistryServiceConection: 'dockerhub-service-con'
  buildId: $(Build.BuildId)


parameters:
    - name: environment
      type: string
      default: dev
      values:
        - dev
        - stagging
        - prod

stages:

- stage: CI
  displayName: CI stage
  jobs:

  - job: Lint
    displayName: Linting
    steps:
        - checkout: self
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(PYTHON_VERSION)'
            addToPath: true
        - script: |
            python -m venv .venv
            source .venv/bin/activate
            pip install --upgrade pip
            pip install flake8
            flake8 todo/todo/ 
          displayName: 'Lint Django app with flake8'


  - job: test
    dependsOn: Lint
    displayName: Testing
    steps:
      - checkout: self

      - script: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-dbus \
            libdbus-1-dev \
            libdbus-glib-1-dev \
            libsystemd-dev \
            libcups2-dev \
            pkg-config \
            build-essential \
            python3-dev \
            gcc \
            libpq-dev \
            libxml2-dev \
            libxslt1-dev \
            zlib1g-dev \
            libjpeg-dev \
            libfreetype6-dev \
            liblcms2-dev \
            libopenjp2-7-dev \
            libtiff-dev \
            tk-dev \
            tcl-dev \
            qtbase5-dev \
            qtchooser \
            qt5-qmake \
            qtbase5-dev-tools

          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip

          sed -i '/dbus-python/d' todo/requirements.txt

          pip install -r todo/requirements.txt
          cd todo
          python manage.py test todo.tests
        displayName: 'Install Deps & Run Unit Tests'


  - job: build
    dependsOn: [Lint,test]
    displayName: Building
    steps:
      - checkout: self

      - task: Docker@2
        displayName: Build and Push
        inputs:
          containerRegistry: $(dockerRegistryServiceConection)
          repository: $(dockerHubNamespace)/devops
          command: 'buildAndPush'
          Dockerfile: 'todo/Dockerfile'
          tags: $(Build.BuildId)
          buildContext: $(Build.SourcesDirectory)/todo




- stage: CD
  displayName: CD stage
  dependsOn: CI
  jobs:

  - deployment: DeployToEks
    displayName: deploy to eks
    environment: ${{ parameters.environment }}
    strategy:
        runOnce:
            deploy:
                steps:
                - checkout: self
                - task: ReplaceTokens@5
                  inputs:
                    rootDirectory: '$(Build.SourcesDirectory)/k8s'
                    targetFiles: "**/*.yaml"
                    tokenPattern: custom
                    tokenPrefix: '${'
                    tokenSuffix: '}'
                    verbosity: detailed
                    escapeType: json

                - task: AWSShellScript@1
                  displayName: 'Login to EKS Cluster'
                  inputs:
                    awsCredentials: 'aws-eks-service-con  '   
                    regionName: 'us-east-1'
                    scriptType: 'inline'
                    inlineScript: |
                      echo "Logging in to EKS cluster"
                      aws eks update-kubeconfig \
                        --region us-east-1 \
                        --name eks-production-cluster

                - script: |
                    kubectl apply -f $(Build.SourcesDirectory)/k8s/ -n ${{ parameters.environment }}
                  displayName: 'Deploy to EKS with kubectl'